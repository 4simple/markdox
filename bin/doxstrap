#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander')
  , util = require('util')
  , format = util.format
  , async = require('async')
  , doxstrap = require('../')
  , fs = require('fs')
  , docfiles = []
  , formatter = require('../lib/formatter');

// options

program
  .version(doxstrap.version)
  .option('-o, --outputfolder <folderpath>', 'specify filepath to output [/path/to/output]', String, process.cwd())
  .command('doxstrap [options]... files...');

// examples

program.on('--help', function(){
  console.log('  Examples:');
  console.log('');
  console.log('    $ doxstrap myfile.js');
  console.log('    $ doxstrap myfile1.js myfile2.js');
  console.log('');
});

// parse argv
program.parse(process.argv);

// loop over files

async.forEach(program.args, function(arg, callback){

  doxstrap.parse(arg, function(err, doc){
    var docfile = {
      filename: arg,
      javadoc: doc
    };
    docfiles.push(formatter.format(docfile));
    callback(err);
  });

}, function (err) {
  console.log('Generation starting');
  async.forEach(docfiles, function(docfile){
    doxstrap.generate(docfile, function(err, output){
      if (err) {
        throw err;
      }
      var path = program.outputfolder + '/' + docfile.filename + '.md';
      console.log('write file ' + path);
      console.log(output);
      fs.writeFile(path, output, 'utf-8', function(err){
        if (err) {
          throw err;
        }
        console.log('Generation finished');
      });
    });
  });


});